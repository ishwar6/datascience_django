# Generated by Django 2.1.4 on 2019-03-11 03:51

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('states', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CompletedChapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timedate', models.DateTimeField(auto_now_add=True, null=True)),
                ('done', models.IntegerField(default=0, help_text='it is 1 if chapter is done, else 0')),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='states.Chapter')),
                ('node', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='states.Node')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CompletedState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('success', models.BooleanField(default=0)),
                ('correct', models.IntegerField(default=0, help_text='No of correct questions submitted by student')),
                ('incorrect', models.IntegerField(default=0, help_text='No of incorrect questions submitted by student')),
                ('score', models.IntegerField(default=0, help_text='To save score of student from question assessment session')),
                ('time_taken', models.IntegerField(default=0, help_text='Time taken by student to finish the state')),
                ('practice', models.IntegerField(default=0, help_text='Number of practice questions solved by the student')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('timeupdate', models.DateTimeField(auto_now=True)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='states.State')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CurrentActiveNode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timedate', models.DateTimeField(auto_now_add=True, null=True)),
                ('node', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, to='states.Node')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CurrentActiveState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active_part', models.IntegerField(default=1, help_text='It is 1 for content, 2 for illustration, 3 for questions, 4 for report')),
                ('score_of_i', models.IntegerField(default=0, help_text='Will increase as the student will solve illustrations')),
                ('score_of_q', models.IntegerField(default=0, help_text='Will increase as the student will solve Questions')),
                ('score', models.IntegerField(default=0, help_text='To save score of student from question assessment session')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('timeupdate', models.DateTimeField(auto_now=True)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='states.State')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PreviousActiveNode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timedate', models.DateTimeField(auto_now_add=True, null=True)),
                ('node', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, to='states.Node')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PreviousState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0, help_text='To save previous score of student from question assessment session')),
                ('score_of_i', models.IntegerField(default=0, help_text='Illustrations already Solved by the student')),
                ('score_of_q', models.IntegerField(default=0, help_text='Questions already  solved by the student')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('timeupdate', models.DateTimeField(auto_now=True)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='states.State')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
