# Generated by Django 2.1.5 on 2019-02-22 08:55

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import states.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=80)),
                ('gaurd', models.CharField(choices=[('algebra', 'Algebra'), ('calculus', 'Calculas'), ('geometry', 'Simple-Geometry'), ('trigo', 'Trigonometry'), ('cartgeo', 'Cartesian-Geometry'), ('others', 'Others')], default='others', max_length=120)),
                ('standard', models.IntegerField(default='10')),
                ('image', models.FileField(blank=True, null=True, upload_to=states.models.upload_image_path_chapters)),
            ],
            options={
                'db_table': 'Chapter',
            },
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120)),
                ('text', models.TextField()),
                ('image', models.FileField(blank=True, null=True, upload_to=states.models.upload_image_path_content)),
                ('image2', models.FileField(blank=True, null=True, upload_to=states.models.upload_image_path_content)),
                ('image3', models.FileField(blank=True, null=True, upload_to=states.models.upload_image_path_content)),
                ('credit', models.PositiveSmallIntegerField(default='2', help_text='Give a number according to difficulty of content between 1 to 5', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('time', models.IntegerField(default='6', help_text='Time in minutes')),
                ('tag', models.CharField(blank=True, max_length=15, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Illustration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('answer', models.TextField(blank=True, null=True)),
                ('image', models.FileField(blank=True, null=True, upload_to=states.models.upload_image_path_illus)),
                ('image2', models.FileField(blank=True, null=True, upload_to=states.models.upload_image_path_illus)),
                ('credit', models.PositiveSmallIntegerField(default='2', help_text='Give a number according to difficulty of illustration between 1 to 5', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('counts', models.IntegerField(blank=True, help_text='Leave it blank', null=True)),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='states.Content')),
            ],
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credit', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(max_length=120)),
                ('assessment', models.BooleanField(default=True, help_text='Weather there will be assessment for student at learning time')),
                ('rate', models.IntegerField(default=2, help_text='Difficulty of the state')),
                ('time', models.IntegerField(default=5, help_text='approx time needed to solve this state fully')),
                ('tag', models.CharField(blank=True, max_length=40, null=True)),
                ('chapter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='states.Chapter')),
            ],
        ),
        migrations.AddField(
            model_name='node',
            name='state_node',
            field=models.ManyToManyField(to='states.State'),
        ),
        migrations.AddField(
            model_name='content',
            name='state',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='states.State'),
        ),
    ]
